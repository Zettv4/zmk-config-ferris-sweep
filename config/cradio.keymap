// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

// https: //zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        tap_dance: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp ESC>, <&tog 1>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <3>;
        };
    };

    macros {
        Alt_R: Alt_R {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp R>;
            label = "ALT_R";
        };
    };

    combos {
        compatible = "zmk,combos";

        app_search {
            bindings = <&Alt_R>;
            key-positions = <31 32>;
            layers = <0>;
        };

        Caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
            layers = <0>;
        };

        C-item {
            bindings = <&kp C>;
            key-positions = <22 21>;
        };

        T-item {
            bindings = <&kp T>;
            key-positions = <23 22>;
            layers = <4>;
        };

        B-recall {
            bindings = <&kp B>;
            key-positions = <20 24>;
            layers = <4>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
        };

        Ctrl_c {
            bindings = <&kp LC(C)>;
            key-positions = <21 22>;
            layers = <0>;
        };

        Ctrl_v {
            bindings = <&kp LC(V)>;
            key-positions = <22 23>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "colemak ~ personalized";
            bindings = <
&kp Q  &kp W            &kp F        &kp P             &kp G        &kp J      &kp L             &kp U          &kp Y                &kp DOT
&kp A  &ht RIGHT_ALT S  &ht LCTRL R  &ht LEFT_SHIFT T  &kp D        &kp H      &ht LEFT_SHIFT N  &ht RCTRL I    &ht RALT E           &kp O
&kp Z  &kp X            &kp C        &kp V             &kp B        &kp K      &kp M             &kp BACKSPACE  &ht LEFT_WIN DELETE  &ht SLASH COMMA
                                     &mo 1             &kp SPACE    &kp ENTER  &mo 2
            >;
        };

        Arrows_etc {
            display-name = "arrows + numbers";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4     &kp N5       &kp NUMBER_6  &kp N7   &kp N8    &kp N9  &kp N0
&none         &none         &kp LEFT_ARROW  &kp RIGHT_ARROW  &none        &none         &kp UP   &kp DOWN  &none   &none
&none         &none         &none           &kp HOME         &none        &none         &kp END  &none     &none   &none
                                            &trans           &kp SPACE    &kp LSHIFT    &none
            >;
        };

        Symbols_frow {
            display-name = "shift symbols + frow";
            bindings = <
&none         &kp F1  &kp F2   &kp F3   &kp F4     &ht TILDE GRAVE        &ht UNDER MINUS     &ht EQUAL PLUS               &none                          &tog 3
&kp LEFT_ALT  &kp F5  &kp F6   &kp F7   &kp F8     &ht DOUBLE_QUOTES SQT  &ht SEMI COLON      &ht LEFT_BRACE LEFT_BRACKET  &ht RIGHT_BRACE RIGHT_BRACKET  &kp PRINTSCREEN
&none         &kp F9  &kp F10  &kp F11  &kp F12    &ht PIPE BACKSLASH     &ht QUESTION SLASH  &kp LESS_THAN                &kp GREATER_THAN               &none
                               &none    &trans     &kp ENTER              &trans
            >;
        };

        General_gaming {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3      &kp N4       &none      &none                 &none     &tog 4     &tog 0
&kp TAB    &kp Q   &kp W   &kp E       &kp R        &none      &kp NON_US_BACKSLASH  &kp UP    &none      &none
&kp LSHFT  &kp A   &kp S   &kp D       &kp F        &none      &kp LEFT              &kp DOWN  &kp RIGHT  &none
                           &ht LALT C  &kp SPACE    &kp LCTRL  &none
            >;

            label = "mostly helldivers 2";
        };

        League {
            bindings = <
&ht TAB ESCAPE  &kp N1  &kp N2  &kp N3     &kp N4       &trans  &trans  &trans  &trans  &tog 0
&kp Q           &kp W   &kp E   &kp R      &kp Y        &trans  &trans  &trans  &trans  &trans
&kp A           &kp S   &kp F   &kp D      &kp C        &trans  &trans  &trans  &trans  &trans
                                &kp LCTRL  &kp SPACE    &trans  &trans
            >;
        };
    };
};
